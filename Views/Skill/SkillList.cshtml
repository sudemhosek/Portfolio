
@model PagedList.IPagedList<Proje1Portfolio.Models.Skill>
@using PagedList
@using PagedList.Mvc

@{
    ViewBag.Title = "SkillList";
    Layout = "~/Views/Admin/Index.cshtml";
}



<h2 class="mb-4">Yeteneklerim listesi</h2>
            Yetenekler gelecek
<table class="table table-bordered">

    <tr>
        <th>Id</th>
        <th>Başlık</th>
        <th>Değer</th>
        <th>Sil</th>
        <th>Güncelle</th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>@item.Skillid</td>
            <td>@item.Title</td>
            <td>@item.Value</td>
            <td><a href="/Skill/DelateSkill/@item.Skillid" class="btn btn-danger">sil</a></td>
            <td><a href="^#" class="btn btn-success">güncelle</a></td>
        </tr>
    }
</table>
@Html.PagedListPager((IPagedList)Model, sayfa => Url.Action("skillList", new { sayfa }))
<td><a href="/Skill/CreateSkill/" class="btn btn-success">yeni yetenek ekle</a></td>

<div style="display: flex; justify-content: center;">
    <canvas id="skillsPieChart" width="300" height="300"></canvas>
</div>

<canvas id="skillsPieChart" width="300" height="300"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
<script>
    fetch('@Url.Action("GetSkillData")')
        .then(response => response.json())
        .then(data => {
            const labels = data.map(skill => skill.Title);
            const values = data.map(skill => skill.Value);

            const ctx = document.getElementById('skillsPieChart').getContext('2d');
            const skillsPieChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        data: values,
                        backgroundColor: [
                            '#FF6384',
                            '#36A2EB',
                            '#FFCE56',
                            '#FF9F40',
                            '#4BC0C0'
                        ],
                    }]
                },
                options: {
                    responsive: false,
                    plugins: {
                        legend: {
                            display: false // Legendi gizle
                        },
                        tooltip: {
                            enabled: false // Tooltip'i gizle
                        },
                        datalabels: {
                            anchor: 'center', // Dilimin merkezine hizala
                            align: 'center', // Merkezde göster
                            formatter: (value, context) => {
                                return context.chart.data.labels[context.dataIndex]; // Başlık olarak etiket göster
                             }
                        }
                    }
                },
                plugins: [ChartDataLabels] // Datalabels eklentisini ekle
            });
        });
</script>
<style>
    canvas {
        display: block; /* Ortaya hizalamak için */
        margin: 0 auto; /* Sayfanın ortasına hizala */
    }
</style>


